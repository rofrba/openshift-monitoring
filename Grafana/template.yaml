apiVersion: v1
kind: Template
metadata:
  name: grafana
  annotations:
    openshift.io/display-name: Grafana
    iconClass: fa fa-code
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: grafana
    name: grafana
    namespace: new-project-monitoring
  spec:
    replicas: 1
    selector:
      app: grafana
      deploymentconfig: grafana
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: grafana
          deploymentconfig: grafana
      spec:
        containers:
        - image: docker-registry.default.svc:5000/openshift/grafana:v3.11
          imagePullPolicy: IfNotPresent
          name: grafana
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboards
            - mountPath: /etc/grafana
              name: grafana-config
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
        volumes:
          - configMap:
              defaultMode: 420
              name: grafana-dashboards
            name: grafana-dashboards
          - configMap:
              defaultMode: 420
              name: grafana-config
            name: grafana-config
          - name: grafana-datasources
            secret:
              defaultMode: 420
              secretName: grafana-datasource
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: grafana
    name: grafana
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: grafana
      deploymentconfig: grafana
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: grafana
    name: grafana
  spec:
    to:
      kind: Service
      name: grafana
- apiVersion: v1
  kind: Secret
  metadata:
    name: grafana-datasource
    namespace: new-project-monitoring
  stringData:
    datasources.yaml: |
      apiVersion: 1
      datasources:
      - name: "Prometheus"
        type: prometheus
        access: proxy
        url: http://prometheus.new-project-monitoring.svc.cluster.local:9090
        basicAuth: false
        withCredentials: false
        isDefault: true
        jsonData:
          tlsSkipVerify: true
        editable: false
- apiVersion: v1
  data:
    grafana.ini: |-
      [paths]
      data = /var/lib/grafana
      logs = /var/lib/grafana/logs
      plugins = /var/lib/grafana/plugins
      provisioning = /etc/grafana/provisioning

      [log]
      # Either "console", "file", "syslog". Default is console and  file
      # Use space to separate multiple modes, e.g. "console file"
      mode = console

      [security]
      # default admin user, created on startup
      admin_user = admin
      admin_password = redhat01
  kind: ConfigMap
  metadata:
    name: grafana-config
- apiVersion: v1
  data:
    dashboards.yaml: |-
      {
          "apiVersion": 1,
          "providers": [
              {
                  "folder": "",
                  "name": "0",
                  "options": {
                      "path": "/grafana-dashboard-definitions/0"
                  },
                  "orgId": 1,
                  "type": "file"
              }
          ]
      }
  kind: ConfigMap
  metadata:
    name: grafana-dashboards
